package com.secretBox.yutnori;

import java.util.ArrayList;

import org.cocos2d.actions.base.CCRepeatForever;
import org.cocos2d.actions.interval.CCAnimate;
import org.cocos2d.layers.CCLayer;
import org.cocos2d.menus.CCMenuItemLabel;

import org.cocos2d.nodes.CCAnimation;
import org.cocos2d.nodes.CCDirector;
import org.cocos2d.nodes.CCSprite;
import org.cocos2d.nodes.CCSpriteFrame;
import org.cocos2d.nodes.CCTextureCache;
import org.cocos2d.opengl.CCTexture2D;
import org.cocos2d.types.CGPoint;
import org.cocos2d.types.CGRect;
import org.cocos2d.types.CGSize;

import com.secretBox.yutnori.logic.YutSet;

import android.util.Log;
import android.view.MotionEvent;

public class YutThrowLayer extends CCLayer{
	CCSprite background;
	CCSprite[] yuts = new CCSprite[7];;
	CCSprite[] yutChars = new CCSprite[7];
	CCSprite yuts_animation; 
	String[] yut_filenames={"yut/yut_nak.png",
							"yut/yut_backdo.png",
							"yut/yut_do.png",
							"yut/yut_ge.png",
							"yut/yut_gul.png",
							"yut/yut_yut.png",
							"yut/yut_mo.png"};
	String[] yutChar_filenames = {"yut/yut_nak_char.png",
								"yut/yut_backdo_char.png",
								"yut/yut_do_char.png",
								"yut/yut_ge_char.png",
								"yut/yut_gul_char.png",
								"yut/yut_yut_char.png",
								"yut/yut_mo_char.png"
									};
	
	CCSpriteFrame[] frames = new CCSpriteFrame[7];

	
	public YutThrowLayer()
	{
		
		background = CCSprite.sprite("yut/yut_background.png");
		addChild(background);
		
		CCAnimation animation =  CCAnimation.animation("testAnimation",0.05f);
		for(int i=0;i<yut_filenames.length;i++)
		{
			animation.addFrame(yut_filenames[i]);	
		}
		
		yuts_animation = CCSprite.sprite(yut_filenames[0]);
		CCAnimate animate = CCAnimate.action(animation);	
		CCRepeatForever animates =  CCRepeatForever.action(animate);
		yuts_animation.runAction(animates);
		addChild(yuts_animation);
		
		
		
	
		
		CGSize backgroundSize = background.getContentSize();
		
		float yutCharPointWidth = backgroundSize.width/ 2;
		float yutCharPointHeight = backgroundSize.height /2;
		yutCharPointWidth  = (yutCharPointWidth /3 )*2;
		yutCharPointHeight = (yutCharPointHeight/3 )*2;
		for(int i=0;i<yuts.length;i++)
		{
			yuts[i] = CCSprite.sprite(yut_filenames[i]);
			yutChars[i] = CCSprite.sprite(yutChar_filenames[i]);
			yutChars[i].setPosition(yutCharPointWidth,yutCharPointHeight);
			 
			addChild(yuts[i]);
			addChild(yutChars[i]);
			yuts[i].setVisible(false);
			yutChars[i].setVisible(false);
			
		}
		this.setIsTouchEnabled(true);
		
		
	}
	private void initYuts()
	{
		for(int i=0;i<yuts.length;i++)
		{
			yuts[i].setVisible(false);
		}
		for(int i=0;i<yutChars.length;i++)
		{
			yutChars[i].setVisible(false);
		}
	}
	
	@Override
	public boolean ccTouchesEnded(MotionEvent e)
	{
		initYuts();
		YutSet.PROPERTY yutProperty = GameManager.getGame().throwYuts();
		yuts_animation.setVisible(false);
		
		if(yutProperty ==YutSet.PROPERTY.NAK)
		{
			yuts[0].setVisible(true);
			yutChars[0].setVisible(true);
		}
		else if(yutProperty ==YutSet.PROPERTY.BACKDO)
		{
			yuts[1].setVisible(true);
			yutChars[1].setVisible(true);
			
		}else if(yutProperty ==YutSet.PROPERTY.DO)
		{
			yuts[2].setVisible(true);
			yutChars[2].setVisible(true);
			
		}else if(yutProperty ==YutSet.PROPERTY.GE)
		{
			yuts[3].setVisible(true);
			yutChars[3].setVisible(true);
			
		}else if(yutProperty ==YutSet.PROPERTY.GUL)
		{
			yuts[4].setVisible(true);
			yutChars[4].setVisible(true);
		}
		else if(yutProperty ==YutSet.PROPERTY.YUT)
		{
			yuts[5].setVisible(true);
			yutChars[5].setVisible(true);
		}
		else if(yutProperty ==YutSet.PROPERTY.MO)
		{
			yuts[6].setVisible(true);
			yutChars[6].setVisible(true);
		}
	
		return true; 
		
	}
	


}
